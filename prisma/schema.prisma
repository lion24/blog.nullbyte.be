generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(READER)
  accounts      Account[]
  posts         Post[]
}

model Post {
  id            String     @id @default(cuid())
  title         String
  slug          String     @unique
  content       String
  excerpt       String?
  featuredImage String?
  published     Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  authorId      String
  views         Int        @default(0)
  author        User       @relation(fields: [authorId], references: [id])
  categories    Category[] @relation("CategoryToPost")
  tags          Tag[]      @relation("PostToTag")

  @@index([published])
  @@index([createdAt])
  @@index([published, createdAt])
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  slug  String @unique
  posts Post[] @relation("PostToTag")
}

model Category {
  id    String @id @default(cuid())
  name  String @unique
  slug  String @unique
  posts Post[] @relation("CategoryToPost")
}

enum Role {
  READER
  ADMIN
}
